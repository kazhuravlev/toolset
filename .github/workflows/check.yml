name: Check

on:
  pull_request:
  push:
    branches: [ 'main' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: 'v2.5'

  build:
    name: Build on golang ${{ matrix.go_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version:
          - '1.23'
          - '1.24'
          - '1.25'
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Build
        run: go build -v -o /dev/null ./cmd/toolset

      - name: Test
        run: go test -v -race -coverprofile coverage.txt -covermode atomic ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
